var search_data = {"index":{"searchIndex":["applicationcontroller","applicationhelper","billingsite","billingsitescontroller","billingsiteshelper","chargefactory","concretecharge","dailyusagecharge","dashingcontroller","dashinghelper","ftpserver","ftpserverscontroller","ftpservershelper","generatedinvoice","globalusagecharge","importedinvoice","invoice","invoicescontroller","invoiceshelper","linearregressionpredictor","meter","meteraggregation","meteraggregationscontroller","meteraggregationshelper","meterpredictor","meterrecord","meterrecordscontroller","meterrecordshelper","metering","classmethods","meteringcharge","meterscontroller","metershelper","predictedinvoice","retailplan","retailplanscontroller","retailplanshelper","retailer","site","sitescontroller","siteshelper","supplycharge","user","users","confirmationscontroller","omniauthcallbackscontroller","passwordscontroller","registrationscontroller","sessionscontroller","unlockscontroller","userscontroller","usershelper","aggregate_and_store()","aggregate_missing_data()","all_day()","authenticate()","authoriseduser()","baddateerror()","badmetererror()","badtimeerror()","bad_daily_time_periods_error()","bad_date_range_error()","calculate()","calculate()","charge_types()","chargefactories()","check_meter()","check_meters()","check_time()","check_times()","concretecharge()","concretecharge()","concretecharge()","concretecharge()","concretecharge()","configure_account_update_params()","configure_sign_up_params()","create()","create()","create()","create()","create()","create()","create()","create_generated_invoice()","create_imported_invoice()","create_predicted_invoice()","current_retail_plan()","dailytimeperiods()","daily_full_usage_sums()","daily_time_periods()","daily_time_periods()","daily_usage()","daily_usage_charges()","daily_usage_hash()","daily_usage_sums()","dashboard()","date_to_offset_integer()","dates_to_offset_integers()","destroy()","destroy()","destroy()","destroy()","destroy()","destroy()","destroy()","destroy()","detailed_predicted_usage_by_meter()","detailed_predicted_usage_by_meter()","detailed_predicted_usage_by_time()","detailed_predicted_usage_by_time()","detailed_usage_by_meter()","detailed_usage_by_meter()","detailed_usage_by_meter()","detailed_usage_by_meter()","detailed_usage_by_time()","detailed_usage_by_time()","detailed_usage_by_time()","detailed_usage_by_time()","directorynotfounderror()","download()","dtp_usage()","edit()","edit()","edit()","edit()","edit()","edit()","edit()","generatenew()","get_daily_time_periods()","get_date_ranges()","get_meters()","get_prediction_invoice()","global_usage_charges()","importcsv()","import_concrete_charge()","import_invoice()","import_nem12()","import_nem12()","import_nem12()","import_nem12()","inclusive_usage()","index()","index()","index()","index()","index()","index()","index()","index()","invoice_directory()","is_array_of_meters()","is_date()","is_meter()","is_time()","is_valid_daily_time_periods()","is_valid_date_ranges()","log_pg_result()","make_daily_meter_hash_array()","make_meter_daily_hash_array()","make_prediction()","meter_usage()","metering_charges()","meters()","midday()","midday()","minutes_in_day()","minutes_in_hour()","multiple_predicted_usage()","multiple_usage()","nem12_uom()","nem12_uom_to_kwh_multiplier()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","offset_integer_to_date()","offset_integers_to_dates()","pgresult_to_hash()","predict()","predictnew()","predict_for_period()","predict_whole_day()","predictable_billing_periods()","predicted_usage_by_meter()","predicted_usage_by_meter()","predicted_usage_by_time()","predicted_usage_by_time()","prediction()","predictor()","reaggregate()","retail_plan_params()","select_date_period()","set_retail_plan()","show()","show()","show()","show()","show()","show()","show()","show()","show()","show_predictions()","single_predicted_usage()","single_usage()","store_file()","sum_usage()","supply_charges()","time()","time_to_minute()","total_dtp_usage_sums()","total_meter_usage_sums()","total_usage_sum()","trim_date_ranges()","truncate()","truncate()","truncate_records()","update()","update()","update()","update()","update()","update()","update()","update_poll_dates()","upload_nem12()","usage()","usage()","usage()","usage()","usage_by_dtp()","usage_by_meter()","usage_by_meter()","usage_by_meter()","usage_by_meter()","usage_by_meter()","usage_by_meter()","usage_by_meter()","usage_by_time()","usage_by_time()","usage_by_time()","usage_by_time()","usage_by_time()","usage_by_time()","use()","validate_connection()","value_presence()","readme"],"longSearchIndex":["applicationcontroller","applicationhelper","billingsite","billingsitescontroller","billingsiteshelper","chargefactory","concretecharge","dailyusagecharge","dashingcontroller","dashinghelper","ftpserver","ftpserverscontroller","ftpservershelper","generatedinvoice","globalusagecharge","importedinvoice","invoice","invoicescontroller","invoiceshelper","linearregressionpredictor","meter","meteraggregation","meteraggregationscontroller","meteraggregationshelper","meterpredictor","meterrecord","meterrecordscontroller","meterrecordshelper","metering","metering::classmethods","meteringcharge","meterscontroller","metershelper","predictedinvoice","retailplan","retailplanscontroller","retailplanshelper","retailer","site","sitescontroller","siteshelper","supplycharge","user","users","users::confirmationscontroller","users::omniauthcallbackscontroller","users::passwordscontroller","users::registrationscontroller","users::sessionscontroller","users::unlockscontroller","userscontroller","usershelper","meteraggregation::aggregate_and_store()","meteraggregation::aggregate_missing_data()","metering::classmethods#all_day()","applicationcontroller#authenticate()","user::authoriseduser()","metering::classmethods#baddateerror()","metering::classmethods#badmetererror()","metering::classmethods#badtimeerror()","metering::classmethods#bad_daily_time_periods_error()","metering::classmethods#bad_date_range_error()","linearregressionpredictor::calculate()","meterpredictor::calculate()","chargefactory::charge_types()","retailplan#chargefactories()","linearregressionpredictor::check_meter()","linearregressionpredictor::check_meters()","linearregressionpredictor::check_time()","linearregressionpredictor::check_times()","chargefactory#concretecharge()","dailyusagecharge#concretecharge()","globalusagecharge#concretecharge()","meteringcharge#concretecharge()","supplycharge#concretecharge()","users::registrationscontroller#configure_account_update_params()","users::registrationscontroller#configure_sign_up_params()","billingsitescontroller#create()","ftpserverscontroller#create()","meteraggregationscontroller#create()","meterrecordscontroller#create()","meterscontroller#create()","retailplanscontroller#create()","sitescontroller#create()","invoicescontroller#create_generated_invoice()","invoicescontroller#create_imported_invoice()","invoicescontroller#create_predicted_invoice()","retailplanshelper#current_retail_plan()","retailplan::dailytimeperiods()","meteraggregation::daily_full_usage_sums()","retailplan#daily_time_periods()","retailplan::daily_time_periods()","linearregressionpredictor#daily_usage()","retailplan#daily_usage_charges()","meteraggregation::daily_usage_hash()","meteraggregation::daily_usage_sums()","dashingcontroller#dashboard()","linearregressionpredictor::date_to_offset_integer()","linearregressionpredictor::dates_to_offset_integers()","billingsitescontroller#destroy()","ftpserverscontroller#destroy()","invoicescontroller#destroy()","meteraggregationscontroller#destroy()","meterrecordscontroller#destroy()","meterscontroller#destroy()","retailplanscontroller#destroy()","sitescontroller#destroy()","meter::detailed_predicted_usage_by_meter()","meter#detailed_predicted_usage_by_meter()","meter::detailed_predicted_usage_by_time()","meter#detailed_predicted_usage_by_time()","linearregressionpredictor::detailed_usage_by_meter()","meter#detailed_usage_by_meter()","meter::detailed_usage_by_meter()","meterpredictor::detailed_usage_by_meter()","linearregressionpredictor::detailed_usage_by_time()","meter::detailed_usage_by_time()","meter#detailed_usage_by_time()","meterpredictor::detailed_usage_by_time()","metering::classmethods#directorynotfounderror()","ftpserver::download()","meteraggregation::dtp_usage()","billingsitescontroller#edit()","ftpserverscontroller#edit()","meteraggregationscontroller#edit()","meterrecordscontroller#edit()","meterscontroller#edit()","retailplanscontroller#edit()","sitescontroller#edit()","invoicescontroller#generatenew()","meter::get_daily_time_periods()","meterrecordscontroller#get_date_ranges()","meterrecordscontroller#get_meters()","billingsitescontroller#get_prediction_invoice()","retailplan#global_usage_charges()","importedinvoice#importcsv()","chargefactory#import_concrete_charge()","invoicescontroller#import_invoice()","meter::import_nem12()","meterrecord::import_nem12()","meterrecordscontroller#import_nem12()","userscontroller#import_nem12()","meteraggregation::inclusive_usage()","billingsitescontroller#index()","ftpserverscontroller#index()","invoicescontroller#index()","meteraggregationscontroller#index()","meterrecordscontroller#index()","meterscontroller#index()","retailplanscontroller#index()","sitescontroller#index()","importedinvoice#invoice_directory()","metering::classmethods#is_array_of_meters()","metering::classmethods#is_date()","metering::classmethods#is_meter()","metering::classmethods#is_time()","metering::classmethods#is_valid_daily_time_periods()","metering::classmethods#is_valid_date_ranges()","metering::classmethods#log_pg_result()","linearregressionpredictor::make_daily_meter_hash_array()","linearregressionpredictor::make_meter_daily_hash_array()","linearregressionpredictor::make_prediction()","meteraggregation::meter_usage()","retailplan#metering_charges()","retailplan#meters()","linearregressionpredictor::midday()","metering::classmethods#midday()","metering::classmethods#minutes_in_day()","metering::classmethods#minutes_in_hour()","meterrecordscontroller#multiple_predicted_usage()","meterrecordscontroller#multiple_usage()","metering::classmethods#nem12_uom()","metering::classmethods#nem12_uom_to_kwh_multiplier()","billingsitescontroller#new()","ftpserverscontroller#new()","generatedinvoice::new()","importedinvoice::new()","meteraggregationscontroller#new()","meterrecordscontroller#new()","meterscontroller#new()","predictedinvoice::new()","retailplanscontroller#new()","sitescontroller#new()","linearregressionpredictor::offset_integer_to_date()","linearregressionpredictor::offset_integers_to_dates()","metering::classmethods#pgresult_to_hash()","linearregressionpredictor#predict()","invoicescontroller#predictnew()","linearregressionpredictor::predict_for_period()","linearregressionpredictor::predict_whole_day()","retailplan#predictable_billing_periods()","meter::predicted_usage_by_meter()","meter#predicted_usage_by_meter()","meter::predicted_usage_by_time()","meter#predicted_usage_by_time()","billingsitescontroller#prediction()","meter::predictor()","meter::reaggregate()","retailplanscontroller#retail_plan_params()","invoicescontroller#select_date_period()","retailplanscontroller#set_retail_plan()","billingsitescontroller#show()","ftpserverscontroller#show()","invoicescontroller#show()","meteraggregationscontroller#show()","meterrecordscontroller#show()","meterscontroller#show()","retailplanscontroller#show()","sitescontroller#show()","userscontroller#show()","billingsitescontroller#show_predictions()","meterrecordscontroller#single_predicted_usage()","meterrecordscontroller#single_usage()","importedinvoice#store_file()","linearregressionpredictor::sum_usage()","retailplan#supply_charges()","applicationcontroller::time()","metering::classmethods#time_to_minute()","meteraggregation::total_dtp_usage_sums()","meteraggregation::total_meter_usage_sums()","meteraggregation::total_usage_sum()","meter::trim_date_ranges()","meteraggregationscontroller#truncate()","meterrecordscontroller#truncate()","meterrecordscontroller#truncate_records()","billingsitescontroller#update()","ftpserverscontroller#update()","meteraggregationscontroller#update()","meterrecordscontroller#update()","meterscontroller#update()","retailplanscontroller#update()","sitescontroller#update()","ftpserver::update_poll_dates()","userscontroller#upload_nem12()","generatedinvoice::usage()","meter::usage()","meter#usage()","predictedinvoice::usage()","meteraggregation::usage_by_dtp()","linearregressionpredictor::usage_by_meter()","linearregressionpredictor#usage_by_meter()","meter::usage_by_meter()","meter#usage_by_meter()","meteraggregation::usage_by_meter()","meterpredictor::usage_by_meter()","meterpredictor#usage_by_meter()","linearregressionpredictor::usage_by_time()","linearregressionpredictor#usage_by_time()","meter::usage_by_time()","meter#usage_by_time()","meterpredictor#usage_by_time()","meterpredictor::usage_by_time()","linearregressionpredictor::use()","ftpserver::validate_connection()","retailplan#value_presence()",""],"info":[["ApplicationController","","ApplicationController.html","",""],["ApplicationHelper","","ApplicationHelper.html","",""],["BillingSite","","BillingSite.html","",""],["BillingSitesController","","BillingSitesController.html","",""],["BillingSitesHelper","","BillingSitesHelper.html","",""],["ChargeFactory","","ChargeFactory.html","","<p>created and modified by Charlene\n"],["ConcreteCharge","","ConcreteCharge.html","",""],["DailyUsageCharge","","DailyUsageCharge.html","",""],["DashingController","","DashingController.html","",""],["DashingHelper","","DashingHelper.html","",""],["FtpServer","","FtpServer.html","",""],["FtpServersController","","FtpServersController.html","",""],["FtpServersHelper","","FtpServersHelper.html","",""],["GeneratedInvoice","","GeneratedInvoice.html","",""],["GlobalUsageCharge","","GlobalUsageCharge.html","",""],["ImportedInvoice","","ImportedInvoice.html","",""],["Invoice","","Invoice.html","",""],["InvoicesController","","InvoicesController.html","",""],["InvoicesHelper","","InvoicesHelper.html","",""],["LinearRegressionPredictor","","LinearRegressionPredictor.html","",""],["Meter","","Meter.html","",""],["MeterAggregation","","MeterAggregation.html","",""],["MeterAggregationsController","","MeterAggregationsController.html","",""],["MeterAggregationsHelper","","MeterAggregationsHelper.html","",""],["MeterPredictor","","MeterPredictor.html","",""],["MeterRecord","","MeterRecord.html","",""],["MeterRecordsController","","MeterRecordsController.html","",""],["MeterRecordsHelper","","MeterRecordsHelper.html","",""],["Metering","","Metering.html","",""],["Metering::ClassMethods","","Metering/ClassMethods.html","",""],["MeteringCharge","","MeteringCharge.html","",""],["MetersController","","MetersController.html","",""],["MetersHelper","","MetersHelper.html","",""],["PredictedInvoice","","PredictedInvoice.html","",""],["RetailPlan","","RetailPlan.html","",""],["RetailPlansController","","RetailPlansController.html","",""],["RetailPlansHelper","","RetailPlansHelper.html","",""],["Retailer","","Retailer.html","",""],["Site","","Site.html","",""],["SitesController","","SitesController.html","",""],["SitesHelper","","SitesHelper.html","",""],["SupplyCharge","","SupplyCharge.html","",""],["User","","User.html","",""],["Users","","Users.html","",""],["Users::ConfirmationsController","","Users/ConfirmationsController.html","",""],["Users::OmniauthCallbacksController","","Users/OmniauthCallbacksController.html","",""],["Users::PasswordsController","","Users/PasswordsController.html","",""],["Users::RegistrationsController","","Users/RegistrationsController.html","",""],["Users::SessionsController","","Users/SessionsController.html","",""],["Users::UnlocksController","","Users/UnlocksController.html","",""],["UsersController","","UsersController.html","",""],["UsersHelper","","UsersHelper.html","",""],["aggregate_and_store","MeterAggregation","MeterAggregation.html#method-c-aggregate_and_store","(date_ranges, daily_time_periods, meters)","<p>Aggregating Daily Usage from meter_records Creates aggregations based on\nthe meters&#39; retail plans, …\n"],["aggregate_missing_data","MeterAggregation","MeterAggregation.html#method-c-aggregate_missing_data","(date_ranges, daily_time_periods, meters)","<p>Find gaps in aggregated data and fill it with estimations TODO – get the\nbilling interval from each …\n"],["all_day","Metering::ClassMethods","Metering/ClassMethods.html#method-i-all_day","()",""],["authenticate","ApplicationController","ApplicationController.html#method-i-authenticate","()",""],["authorisedUser","User","User.html#method-c-authorisedUser","()","<p>This needs to be an actual instance of a User, not a class reference, and\nit should return the same one …\n"],["badDateError","Metering::ClassMethods","Metering/ClassMethods.html#method-i-badDateError","()",""],["badMeterError","Metering::ClassMethods","Metering/ClassMethods.html#method-i-badMeterError","()",""],["badTimeError","Metering::ClassMethods","Metering/ClassMethods.html#method-i-badTimeError","()",""],["bad_daily_time_periods_error","Metering::ClassMethods","Metering/ClassMethods.html#method-i-bad_daily_time_periods_error","(dtp)",""],["bad_date_range_error","Metering::ClassMethods","Metering/ClassMethods.html#method-i-bad_date_range_error","(dr)",""],["calculate","LinearRegressionPredictor","LinearRegressionPredictor.html#method-c-calculate","(start_date, end_date, daily_time_period, meter)","<p>Calculates and saves a predictor of type LinearRegressionPredictor for each\ndaily time period and meter …\n"],["calculate","MeterPredictor","MeterPredictor.html#method-c-calculate","(start_date, end_date, daily_time_period, meter)","<p>These functions should be implemented in subclasses, raises an error if not\nimplemented in them but are …\n"],["charge_types","ChargeFactory","ChargeFactory.html#method-c-charge_types","()",""],["chargefactories","RetailPlan","RetailPlan.html#method-i-chargefactories","()","<p>Returns an array containing the ChargeFactories used by this RetailPlan\n"],["check_meter","LinearRegressionPredictor","LinearRegressionPredictor.html#method-c-check_meter","(meter)","<p>check if input is a Meter return error if it is not\n"],["check_meters","LinearRegressionPredictor","LinearRegressionPredictor.html#method-c-check_meters","(meters)","<p>check if input is an array of Meters return error if it is not\n"],["check_time","LinearRegressionPredictor","LinearRegressionPredictor.html#method-c-check_time","(daily_time_period)","<p>check if input is a daily time period (metering interface design document)\n<p>Author: Peter McNamara\n<p>Inputs …\n"],["check_times","LinearRegressionPredictor","LinearRegressionPredictor.html#method-c-check_times","(daily_time_periods)","<p>check if input is array of time periods (metering interface design\ndocument)\n<p>Author: Peter McNamara\n<p>Inputs …\n"],["concreteCharge","ChargeFactory","ChargeFactory.html#method-i-concreteCharge","(invoice)","<p>Abstract method to be implemented in specific subclass\n"],["concreteCharge","DailyUsageCharge","DailyUsageCharge.html#method-i-concreteCharge","(invoice)","<p>belongs_to :charge_factory\n"],["concreteCharge","GlobalUsageCharge","GlobalUsageCharge.html#method-i-concreteCharge","(invoice)","<p>belongs_to :charge_factory\n"],["concreteCharge","MeteringCharge","MeteringCharge.html#method-i-concreteCharge","(invoice)","<p>belongs_to :charge_factory\n"],["concreteCharge","SupplyCharge","SupplyCharge.html#method-i-concreteCharge","(invoice)","<p>belongs_to :charge_factory\n"],["configure_account_update_params","Users::RegistrationsController","Users/RegistrationsController.html#method-i-configure_account_update_params","()","<p>If you have extra params to permit, append them to the sanitizer.\n"],["configure_sign_up_params","Users::RegistrationsController","Users/RegistrationsController.html#method-i-configure_sign_up_params","()","<p>If you have extra params to permit, append them to the sanitizer.\n"],["create","BillingSitesController","BillingSitesController.html#method-i-create","()","<p>POST /billing_sites POST /billing_sites.json\n"],["create","FtpServersController","FtpServersController.html#method-i-create","()","<p>POST /ftp_servers POST /ftp_servers.json\n"],["create","MeterAggregationsController","MeterAggregationsController.html#method-i-create","()","<p>POST /meter_aggregations POST /meter_aggregations.json\n"],["create","MeterRecordsController","MeterRecordsController.html#method-i-create","()","<p>POST /meter_records POST /meter_records.json\n"],["create","MetersController","MetersController.html#method-i-create","()","<p>POST /meters POST /meters.json\n"],["create","RetailPlansController","RetailPlansController.html#method-i-create","()","<p>Todo: have validations that no 2 retail plans have same start and end date\n"],["create","SitesController","SitesController.html#method-i-create","()","<p>POST /sites POST /sites.json\n"],["create_generated_invoice","InvoicesController","InvoicesController.html#method-i-create_generated_invoice","()","<p>post: /invoices/generate\n"],["create_imported_invoice","InvoicesController","InvoicesController.html#method-i-create_imported_invoice","()","<p>importing a CSV file /invoices/import\n"],["create_predicted_invoice","InvoicesController","InvoicesController.html#method-i-create_predicted_invoice","()","<p>post: /invoices/predict\n"],["current_retail_plan","RetailPlansHelper","RetailPlansHelper.html#method-i-current_retail_plan","()","<p>similar to RP.find(params) used in show and edit. Just created in case we\nneed to make use of current …\n"],["dailyTimePeriods","RetailPlan","RetailPlan.html#method-c-dailyTimePeriods","(meters)","<p>This needs to be an array – there will be severeal time periods throughout\nthe day\n"],["daily_full_usage_sums","MeterAggregation","MeterAggregation.html#method-c-daily_full_usage_sums","(date_range, whitelist)",""],["daily_time_periods","RetailPlan","RetailPlan.html#method-i-daily_time_periods","()","<p>Reload dailyTimePeriods without parameter Return: [Hash(:start_time,\nvalue),Hash(:end_time, value)]\n"],["daily_time_periods","RetailPlan","RetailPlan.html#method-c-daily_time_periods","(meters)","<p>It would be good if this method could work out the DTPs the meters in the\nargument.\n"],["daily_usage","LinearRegressionPredictor","LinearRegressionPredictor.html#method-i-daily_usage","(start_date, end_date)","<p>creates :usage hash array between start and end date (see metering\ninterface documentation for reference) …\n"],["daily_usage_charges","RetailPlan","RetailPlan.html#method-i-daily_usage_charges","()",""],["daily_usage_hash","MeterAggregation","MeterAggregation.html#method-c-daily_usage_hash","(result)","<p>TODO Move to private Returns a hash of usages per date\n"],["daily_usage_sums","MeterAggregation","MeterAggregation.html#method-c-daily_usage_sums","(date_range, daily_time_periods, whitelist)","<p>Gets the daily usages for all meters in the whitelist and for the date\nrange specified. Returns an array …\n"],["dashboard","DashingController","DashingController.html#method-i-dashboard","()",""],["date_to_offset_integer","LinearRegressionPredictor","LinearRegressionPredictor.html#method-c-date_to_offset_integer","(date)","<p>maps a date to  an integer offsets from a set date\n<p>Author: Peter McNamara\n<p>Inputs\n"],["dates_to_offset_integers","LinearRegressionPredictor","LinearRegressionPredictor.html#method-c-dates_to_offset_integers","(dates)","<p>maps dates to integer offsets from a set date so the linefit gem can use\nthe data\n<p>Author: Peter McNamara …\n"],["destroy","BillingSitesController","BillingSitesController.html#method-i-destroy","()","<p>DELETE /billing_sites/1 DELETE /billing_sites/1.json\n"],["destroy","FtpServersController","FtpServersController.html#method-i-destroy","()","<p>DELETE /ftp_servers/1 DELETE /ftp_servers/1.json\n"],["destroy","InvoicesController","InvoicesController.html#method-i-destroy","()",""],["destroy","MeterAggregationsController","MeterAggregationsController.html#method-i-destroy","()","<p>DELETE /meter_aggregations/1 DELETE /meter_aggregations/1.json\n"],["destroy","MeterRecordsController","MeterRecordsController.html#method-i-destroy","()","<p>DELETE /meter_records/1 DELETE /meter_records/1.json\n"],["destroy","MetersController","MetersController.html#method-i-destroy","()","<p>DELETE /meters/1 DELETE /meters/1.json\n"],["destroy","RetailPlansController","RetailPlansController.html#method-i-destroy","()",""],["destroy","SitesController","SitesController.html#method-i-destroy","()","<p>DELETE /sites/1 DELETE /sites/1.json\n"],["detailed_predicted_usage_by_meter","Meter","Meter.html#method-c-detailed_predicted_usage_by_meter","(date_ranges, daily_time_periods, meters)","<p>TODO add this method to SDD\n"],["detailed_predicted_usage_by_meter","Meter","Meter.html#method-i-detailed_predicted_usage_by_meter","(date_ranges, daily_time_periods)","<p>TODO add this method to SDD\n"],["detailed_predicted_usage_by_time","Meter","Meter.html#method-c-detailed_predicted_usage_by_time","(date_ranges, daily_time_periods, meters)","<p>TODO add this method to SDD\n"],["detailed_predicted_usage_by_time","Meter","Meter.html#method-i-detailed_predicted_usage_by_time","(date_ranges, daily_time_periods)","<p>TODO add this method to SDD\n"],["detailed_usage_by_meter","LinearRegressionPredictor","LinearRegressionPredictor.html#method-c-detailed_usage_by_meter","(date_range, daily_time_period, meter)","<p>Calculates usage, uses #use for the functionality\n<p>Author: Peter McNamara\n<p>Inputs\n"],["detailed_usage_by_meter","Meter","Meter.html#method-i-detailed_usage_by_meter","(date_ranges, daily_time_periods)","<p>TODO add this method to SDD\n"],["detailed_usage_by_meter","Meter","Meter.html#method-c-detailed_usage_by_meter","(date_ranges, daily_time_periods, meters)",""],["detailed_usage_by_meter","MeterPredictor","MeterPredictor.html#method-c-detailed_usage_by_meter","(date_range, daily_time_period, meter)",""],["detailed_usage_by_time","LinearRegressionPredictor","LinearRegressionPredictor.html#method-c-detailed_usage_by_time","(date_range, daily_time_period, meter)","<p>Calculates usage, uses #use for the functionality\n<p>Author: Peter McNamara\n<p>Inputs\n"],["detailed_usage_by_time","Meter","Meter.html#method-c-detailed_usage_by_time","(date_ranges, daily_time_periods, meters)",""],["detailed_usage_by_time","Meter","Meter.html#method-i-detailed_usage_by_time","(date_ranges, daily_time_periods)","<p>TODO add this method to SDD\n"],["detailed_usage_by_time","MeterPredictor","MeterPredictor.html#method-c-detailed_usage_by_time","(date_range, daily_time_period, meter)",""],["directoryNotFoundError","Metering::ClassMethods","Metering/ClassMethods.html#method-i-directoryNotFoundError","(d)","<p>Errors\n"],["download","FtpServer","FtpServer.html#method-c-download","()","<p>dowload the data from FTP\n"],["dtp_usage","MeterAggregation","MeterAggregation.html#method-c-dtp_usage","(date_range, dtps, whitelist, options)","<p>Gets an array of usage data hashes, broken down by Daily Time Period TODO\nmove to private\n"],["edit","BillingSitesController","BillingSitesController.html#method-i-edit","()","<p>GET /billing_sites/1/edit\n"],["edit","FtpServersController","FtpServersController.html#method-i-edit","()","<p>GET /ftp_servers/1/edit\n"],["edit","MeterAggregationsController","MeterAggregationsController.html#method-i-edit","()","<p>GET /meter_aggregations/1/edit\n"],["edit","MeterRecordsController","MeterRecordsController.html#method-i-edit","()","<p>GET /meter_records/1/edit\n"],["edit","MetersController","MetersController.html#method-i-edit","()","<p>GET /meters/1/edit\n"],["edit","RetailPlansController","RetailPlansController.html#method-i-edit","()",""],["edit","SitesController","SitesController.html#method-i-edit","()","<p>GET /sites/1/edit\n"],["generateNew","InvoicesController","InvoicesController.html#method-i-generateNew","()","<p>get: /invoices/generateNew\n"],["get_daily_time_periods","Meter","Meter.html#method-c-get_daily_time_periods","(meters)","<p>Gets the daily time periods for the given Meters\n"],["get_date_ranges","MeterRecordsController","MeterRecordsController.html#method-i-get_date_ranges","()",""],["get_meters","MeterRecordsController","MeterRecordsController.html#method-i-get_meters","()",""],["get_prediction_invoice","BillingSitesController","BillingSitesController.html#method-i-get_prediction_invoice","(billing_site_id)",""],["global_usage_charges","RetailPlan","RetailPlan.html#method-i-global_usage_charges","()",""],["importCSV","ImportedInvoice","ImportedInvoice.html#method-i-importCSV","(retail_plan, file)",""],["import_concrete_charge","ChargeFactory","ChargeFactory.html#method-i-import_concrete_charge","(invoice, amount)",""],["import_invoice","InvoicesController","InvoicesController.html#method-i-import_invoice","()","<p>/invoices/new\n"],["import_nem12","Meter","Meter.html#method-c-import_nem12","(directory, meters)","<p>STATIC method Read the given directory, import any NEM12 records found,\nprovided the record is for a …\n"],["import_nem12","MeterRecord","MeterRecord.html#method-c-import_nem12","(directory, meters)","<p>Import NEM12, reads the given directory, and imports any NEM12 records\nfound, provided the records is …\n"],["import_nem12","MeterRecordsController","MeterRecordsController.html#method-i-import_nem12","()","<p>Calls the static class method Meter.import\n"],["import_nem12","UsersController","UsersController.html#method-i-import_nem12","()","<p>POST /users/import Store the nem12 file into user&#39;s home directory\n"],["inclusive_usage","MeterAggregation","MeterAggregation.html#method-c-inclusive_usage","(date_ranges, daily_time_periods, meters, detailed)","<p>Gets an array of top level, inclusive usage data hashes As per spec\nInterface08, usage data in the top …\n"],["index","BillingSitesController","BillingSitesController.html#method-i-index","()","<p>GET /billing_sites GET /billing_sites.json\n"],["index","FtpServersController","FtpServersController.html#method-i-index","()","<p>GET /ftp_servers GET /ftp_servers.json\n"],["index","InvoicesController","InvoicesController.html#method-i-index","()","<p>/invoices\n"],["index","MeterAggregationsController","MeterAggregationsController.html#method-i-index","()","<p>GET /meter_aggregations GET /meter_aggregations.json\n"],["index","MeterRecordsController","MeterRecordsController.html#method-i-index","()","<p>GET /meter_records GET /meter_records.json\n"],["index","MetersController","MetersController.html#method-i-index","()","<p>GET /meters GET /meters.json\n"],["index","RetailPlansController","RetailPlansController.html#method-i-index","()","<p>created index for the retail_plans page, along with respective view. GET\nindex\n"],["index","SitesController","SitesController.html#method-i-index","()","<p>GET /sites GET /sites.json\n"],["invoice_directory","ImportedInvoice","ImportedInvoice.html#method-i-invoice_directory","()",""],["is_array_of_meters","Metering::ClassMethods","Metering/ClassMethods.html#method-i-is_array_of_meters","(meters)","<p>Validating arguments passed to public methods\n"],["is_date","Metering::ClassMethods","Metering/ClassMethods.html#method-i-is_date","(d)","<p>Returns true if d is a Date\n"],["is_meter","Metering::ClassMethods","Metering/ClassMethods.html#method-i-is_meter","(m)","<p>Return true if m is a Meter\n"],["is_time","Metering::ClassMethods","Metering/ClassMethods.html#method-i-is_time","(t)","<p>Returns true if t is a Time\n"],["is_valid_daily_time_periods","Metering::ClassMethods","Metering/ClassMethods.html#method-i-is_valid_daily_time_periods","(dtps)",""],["is_valid_date_ranges","Metering::ClassMethods","Metering/ClassMethods.html#method-i-is_valid_date_ranges","(drs)",""],["log_pg_result","Metering::ClassMethods","Metering/ClassMethods.html#method-i-log_pg_result","(result)","<p>Dumps the contents of a query result to the logger\n"],["make_daily_meter_hash_array","LinearRegressionPredictor","LinearRegressionPredictor.html#method-c-make_daily_meter_hash_array","(date_range, daily_time_periods, meters,detailed)","<p>makes the hash broken down by daily usage period first (see design document\nmetering interface)\n<p>Author: …\n"],["make_meter_daily_hash_array","LinearRegressionPredictor","LinearRegressionPredictor.html#method-c-make_meter_daily_hash_array","(date_range, daily_time_periods, meters,detailed)","<p>makes the hash broken down by meter first (see design document metering\ninterface)\n<p>Author: Peter McNamara …\n"],["make_prediction","LinearRegressionPredictor","LinearRegressionPredictor.html#method-c-make_prediction","(daily_usages, dates)","<p>fit a line to the data using linear regression\n<p>Author: Peter McNamara\n<p>Inputs\n"],["meter_usage","MeterAggregation","MeterAggregation.html#method-c-meter_usage","(date_range, dtps, whitelist, options)","<p>Gets an array of usage data hashes, broken down by Meter TODO move to\nprivate\n"],["metering_charges","RetailPlan","RetailPlan.html#method-i-metering_charges","()",""],["meters","RetailPlan","RetailPlan.html#method-i-meters","()","<p>Returns an array of the meters that are used by this RetailPlan\n"],["midday","LinearRegressionPredictor","LinearRegressionPredictor.html#method-c-midday","()","<p>simple function to return the time representing noon (midday)\n"],["midday","Metering::ClassMethods","Metering/ClassMethods.html#method-i-midday","()",""],["minutes_in_day","Metering::ClassMethods","Metering/ClassMethods.html#method-i-minutes_in_day","()","<p>Returns the number of minutes in a day\n"],["minutes_in_hour","Metering::ClassMethods","Metering/ClassMethods.html#method-i-minutes_in_hour","()","<p>Returns the number of minutes in an hour\n"],["multiple_predicted_usage","MeterRecordsController","MeterRecordsController.html#method-i-multiple_predicted_usage","()",""],["multiple_usage","MeterRecordsController","MeterRecordsController.html#method-i-multiple_usage","()","<p>Calls the Meter.usage static class method\n"],["nem12_uom","Metering::ClassMethods","Metering/ClassMethods.html#method-i-nem12_uom","()","<p>Array of valid units of measurement for NEM12\n"],["nem12_uom_to_kwh_multiplier","Metering::ClassMethods","Metering/ClassMethods.html#method-i-nem12_uom_to_kwh_multiplier","(old_uom)","<p>Returns the unit by which to multiply an aggregation to get kwh TODO Look\nover this with someone that …\n"],["new","BillingSitesController","BillingSitesController.html#method-i-new","()","<p>GET /billing_sites/new\n"],["new","FtpServersController","FtpServersController.html#method-i-new","()","<p>GET /ftp_servers/new\n"],["new","GeneratedInvoice","GeneratedInvoice.html#method-c-new","(attributes)","<p>Reload constructor initialize Calling generateConcreteCharges to generate\nconcrete charges and column …\n"],["new","ImportedInvoice","ImportedInvoice.html#method-c-new","(retail_plan, file)",""],["new","MeterAggregationsController","MeterAggregationsController.html#method-i-new","()","<p>GET /meter_aggregations/new\n"],["new","MeterRecordsController","MeterRecordsController.html#method-i-new","()","<p>GET /meter_records/new\n"],["new","MetersController","MetersController.html#method-i-new","()","<p>GET /meters/new\n"],["new","PredictedInvoice","PredictedInvoice.html#method-c-new","(attributes)","<p>Reload constructor initialize Calling generateConcreteCharges to generate\nconcrete charges and column …\n"],["new","RetailPlansController","RetailPlansController.html#method-i-new","()","<p>GET new\n"],["new","SitesController","SitesController.html#method-i-new","()","<p>GET /sites/new\n"],["offset_integer_to_date","LinearRegressionPredictor","LinearRegressionPredictor.html#method-c-offset_integer_to_date","(offset_integer)","<p>maps integer offset from a set date to a  date\n<p>Author: Peter McNamara\n<p>Inputs\n"],["offset_integers_to_dates","LinearRegressionPredictor","LinearRegressionPredictor.html#method-c-offset_integers_to_dates","(offset_integers)","<p>maps integer offsets from a set date to dates\n<p>Author: Peter McNamara\n<p>Inputs\n"],["pgresult_to_hash","Metering::ClassMethods","Metering/ClassMethods.html#method-i-pgresult_to_hash","(result)","<p>Transforms a PostGresql result object into a hash This needs a little work\n– don&#39;t use it until …\n"],["predict","LinearRegressionPredictor","LinearRegressionPredictor.html#method-i-predict","(date)","<p>predict the usage for a date\n<p>Author: Peter McNamara\n<p>Inputs\n"],["predictNew","InvoicesController","InvoicesController.html#method-i-predictNew","()","<p>get: /invoices/predictNew\n"],["predict_for_period","LinearRegressionPredictor","LinearRegressionPredictor.html#method-c-predict_for_period","(meter, start_time, end_time, date_range)","<p>Calculates usage for daily time period corresponding to the whole day\nAuthor: Peter McNamara\n<p>Inputs\n<p><code>meter</code> …\n"],["predict_whole_day","LinearRegressionPredictor","LinearRegressionPredictor.html#method-c-predict_whole_day","(meter, date_range)","<p>Calculates usage for daily time period corresponding to the whole day\nAuthor: Peter McNamara\n<p>Inputs\n<p><code>meter</code> …\n"],["predictable_billing_periods","RetailPlan","RetailPlan.html#method-i-predictable_billing_periods","()","<p>Returns an array of billing periods, for which the system is able to\nprovide predicted data\n"],["predicted_usage_by_meter","Meter","Meter.html#method-c-predicted_usage_by_meter","(date_ranges, daily_time_periods, meters)","<p>Methods for predicted usage\n"],["predicted_usage_by_meter","Meter","Meter.html#method-i-predicted_usage_by_meter","(date_ranges, daily_time_periods)","<p>Methods for predicted usage\n"],["predicted_usage_by_time","Meter","Meter.html#method-c-predicted_usage_by_time","(date_ranges, daily_time_periods, meters)",""],["predicted_usage_by_time","Meter","Meter.html#method-i-predicted_usage_by_time","(date_ranges, daily_time_periods)",""],["prediction","BillingSitesController","BillingSitesController.html#method-i-prediction","()",""],["predictor","Meter","Meter.html#method-c-predictor","()","<p>Return the class that is being used as a predictor This should probably be\ndelegated to the MeterPredictor …\n"],["reaggregate","Meter","Meter.html#method-c-reaggregate","(date_ranges, daily_time_periods, meters)",""],["retail_plan_params","RetailPlansController","RetailPlansController.html#method-i-retail_plan_params","()",""],["select_date_period","InvoicesController","InvoicesController.html#method-i-select_date_period","()",""],["set_retail_plan","RetailPlansController","RetailPlansController.html#method-i-set_retail_plan","()","<p>Required parameters for Retail Plan forms.\n"],["show","BillingSitesController","BillingSitesController.html#method-i-show","()","<p>GET /billing_sites/1 GET /billing_sites/1.json\n"],["show","FtpServersController","FtpServersController.html#method-i-show","()","<p>GET /ftp_servers/1 GET /ftp_servers/1.json\n"],["show","InvoicesController","InvoicesController.html#method-i-show","()","<p>invoices/:id\n"],["show","MeterAggregationsController","MeterAggregationsController.html#method-i-show","()","<p>GET /meter_aggregations/1 GET /meter_aggregations/1.json\n"],["show","MeterRecordsController","MeterRecordsController.html#method-i-show","()","<p>GET /meter_records/1 GET /meter_records/1.json\n"],["show","MetersController","MetersController.html#method-i-show","()","<p>GET /meters/1 GET /meters/1.json\n"],["show","RetailPlansController","RetailPlansController.html#method-i-show","()","<p>GET show\n"],["show","SitesController","SitesController.html#method-i-show","()","<p>GET /sites/1 GET /sites/1.json\n"],["show","UsersController","UsersController.html#method-i-show","()","<p>GET /users/1\n"],["show_predictions","BillingSitesController","BillingSitesController.html#method-i-show_predictions","()",""],["single_predicted_usage","MeterRecordsController","MeterRecordsController.html#method-i-single_predicted_usage","()","<p>Calls the meter.usage instance method\n"],["single_usage","MeterRecordsController","MeterRecordsController.html#method-i-single_usage","()","<p>Calls the meter.usage instance method\n"],["store_file","ImportedInvoice","ImportedInvoice.html#method-i-store_file","(file)",""],["sum_usage","LinearRegressionPredictor","LinearRegressionPredictor.html#method-c-sum_usage","(daily_usage)","<p>Sums :daily_usage array (see metering interface documentation for\nreference) Author: Peter McNamara\n<p>Inputs …\n"],["supply_charges","RetailPlan","RetailPlan.html#method-i-supply_charges","()",""],["time","ApplicationController","ApplicationController.html#method-c-time","(hour, minute)",""],["time_to_minute","Metering::ClassMethods","Metering/ClassMethods.html#method-i-time_to_minute","(t)","<p>Converts a Time object to an integer, which is the minute of the day\n"],["total_dtp_usage_sums","MeterAggregation","MeterAggregation.html#method-c-total_dtp_usage_sums","(date_range, daily_time_periods, whitelist)","<p>Gets the total usage each meter in the whitelist and for the date range\nspecified. Returns a float.  …\n"],["total_meter_usage_sums","MeterAggregation","MeterAggregation.html#method-c-total_meter_usage_sums","(date_range, whitelist)","<p>Gets the total usage each meter in the whitelist and for the date range\nspecified. Returns a float.  …\n"],["total_usage_sum","MeterAggregation","MeterAggregation.html#method-c-total_usage_sum","(date_range, whitelist)","<p>Gets the total usage for all meters in the whitelist and for the date range\nspecified. Returns a float. …\n"],["trim_date_ranges","Meter","Meter.html#method-c-trim_date_ranges","(date_ranges, meters)",""],["truncate","MeterAggregationsController","MeterAggregationsController.html#method-i-truncate","()","<p>Empty the Aggregations table, restart the index\n"],["truncate","MeterRecordsController","MeterRecordsController.html#method-i-truncate","()","<p>Empty the Records table, restart the index\n"],["truncate_records","MeterRecordsController","MeterRecordsController.html#method-i-truncate_records","()",""],["update","BillingSitesController","BillingSitesController.html#method-i-update","()","<p>PATCH/PUT /billing_sites/1 PATCH/PUT /billing_sites/1.json\n"],["update","FtpServersController","FtpServersController.html#method-i-update","()","<p>PATCH/PUT /ftp_servers/1 PATCH/PUT /ftp_servers/1.json\n"],["update","MeterAggregationsController","MeterAggregationsController.html#method-i-update","()","<p>PATCH/PUT /meter_aggregations/1 PATCH/PUT /meter_aggregations/1.json\n"],["update","MeterRecordsController","MeterRecordsController.html#method-i-update","()","<p>PATCH/PUT /meter_records/1 PATCH/PUT /meter_records/1.json\n"],["update","MetersController","MetersController.html#method-i-update","()","<p>PATCH/PUT /meters/1 PATCH/PUT /meters/1.json\n"],["update","RetailPlansController","RetailPlansController.html#method-i-update","()","<p>Update action applies when user edits the fields of exisiting retail plan.\nFind the RP by id, apply update …\n"],["update","SitesController","SitesController.html#method-i-update","()","<p>PATCH/PUT /sites/1 PATCH/PUT /sites/1.json\n"],["update_poll_dates","FtpServer","FtpServer.html#method-c-update_poll_dates","(server)",""],["upload_nem12","UsersController","UsersController.html#method-i-upload_nem12","()","<p>GET /users/import Upload NEM12\n"],["usage","GeneratedInvoice","GeneratedInvoice.html#method-c-usage","(start_date, end_date, daily_usage_period, meters)",""],["usage","Meter","Meter.html#method-c-usage","(date_ranges, daily_time_periods, meters, usage_by = :time, detailed = false)","<p>TODO Move to private\n"],["usage","Meter","Meter.html#method-i-usage","(start_date, end_date, start_time, end_time)","<p>Usage for a single given daily time period, given by start_time and\nend_time, for this Meter instance …\n"],["usage","PredictedInvoice","PredictedInvoice.html#method-c-usage","(start_date, end_date, daily_usage_period, meters)",""],["usage_by_dtp","MeterAggregation","MeterAggregation.html#method-c-usage_by_dtp","(date_ranges, daily_time_periods, meters, detailed = false)","<p>Gets Usage data organized by Daily Time Period As per spec Interface08,\nusage organized by daily time …\n"],["usage_by_meter","LinearRegressionPredictor","LinearRegressionPredictor.html#method-c-usage_by_meter","(start_date, end_date, daily_time_period, meter)","<p>Calculates usage, uses #use for the functionality\n<p>Author: Peter McNamara\n<p>Inputs\n"],["usage_by_meter","LinearRegressionPredictor","LinearRegressionPredictor.html#method-i-usage_by_meter","(start_date, end_date, daily_time_period)","<p>Calculates usage for this meter, uses #use for the functionality\n<p>Author: Peter McNamara\n<p>Inputs\n"],["usage_by_meter","Meter","Meter.html#method-c-usage_by_meter","(date_ranges, daily_time_periods, meters)","<p>Methods for actual usage\n"],["usage_by_meter","Meter","Meter.html#method-i-usage_by_meter","(date_ranges, daily_time_periods)","<p>Methods for actual usage\n"],["usage_by_meter","MeterAggregation","MeterAggregation.html#method-c-usage_by_meter","(date_ranges, daily_time_periods, meters, detailed = false)","<p>Gets Usage data organized by Meter As per spec Interface08, usage organized\nby meter\n"],["usage_by_meter","MeterPredictor","MeterPredictor.html#method-c-usage_by_meter","(start_date, end_date, daily_time_period, meter)",""],["usage_by_meter","MeterPredictor","MeterPredictor.html#method-i-usage_by_meter","(start_date, end_date, daily_time_period)",""],["usage_by_time","LinearRegressionPredictor","LinearRegressionPredictor.html#method-c-usage_by_time","(start_date, end_date, daily_time_period, meter)","<p>Calculates usage, uses #use for the functionality\n<p>Author: Peter McNamara\n<p>Inputs\n"],["usage_by_time","LinearRegressionPredictor","LinearRegressionPredictor.html#method-i-usage_by_time","(start_date, end_date, daily_time_period)","<p>Calculates usage for this meter, uses #use for the functionality\n<p>Author: Peter McNamara\n<p>Inputs\n"],["usage_by_time","Meter","Meter.html#method-c-usage_by_time","(date_ranges, daily_time_periods, meters)",""],["usage_by_time","Meter","Meter.html#method-i-usage_by_time","(date_ranges, daily_time_periods)",""],["usage_by_time","MeterPredictor","MeterPredictor.html#method-i-usage_by_time","(start_date, end_date, daily_time_period)",""],["usage_by_time","MeterPredictor","MeterPredictor.html#method-c-usage_by_time","(start_date, end_date, daily_time_period, meter)",""],["use","LinearRegressionPredictor","LinearRegressionPredictor.html#method-c-use","(date_range, daily_time_period, meter, broken_by, detailed)","<p>generic function to return usage in the complicated hash format specified\nUsed by all the external functions …\n"],["validate_connection","FtpServer","FtpServer.html#method-c-validate_connection","()",""],["value_presence","RetailPlan","RetailPlan.html#method-i-value_presence","()",""],["README","","README_rdoc.html","","<p>README\n<p>This README would normally document whatever steps are necessary to get the\napplication up and …\n"]]}}